!function(e){function r(n){if(t[n])return t[n].exports;var o=t[n]={exports:{},id:n,loaded:!1};return e[n].call(o.exports,o,o.exports,r),o.loaded=!0,o.exports}var t={};return r.m=e,r.c=t,r.p="",r(0)}([function(e,r,t){THREE.BufferGeometryUtils||t(1),AFRAME.registerComponent("geometry-merger",{schema:{preserveOriginal:{default:!1}},init:function(){var e=this;this.geometry=new THREE.Geometry,this.mesh=new THREE.Mesh(this.geometry),this.el.setObject3D("mesh",this.mesh),this.faceIndex={},this.vertexIndex={},this.el.object3D.traverse(function(r){"Mesh"===r.type&&r!==e.mesh&&(e.faceIndex[r.parent.uuid]=[e.geometry.faces.length,e.geometry.faces.length+r.geometry.faces.length-1],e.vertexIndex[r.parent.uuid]=[e.geometry.vertices.length,e.geometry.vertices.length+r.geometry.vertices.length-1],r.parent.updateMatrix(),e.geometry.merge(r.geometry,r.parent.matrix),e.data.preserveOriginal||r.parent.remove(r))})}}),AFRAME.registerComponent("buffer-geometry-merger",{schema:{preserveOriginal:{default:!1}},init:function(){var e=[];this.el.sceneEl.object3D.updateMatrixWorld(),this.el.object3D.traverse(function(r){"Mesh"===r.type&&r.el!==self.el&&(r.geometry.applyMatrix(r.matrixWorld),e.push(r.geometry.clone()),r.parent.remove(r))});const r=THREE.BufferGeometryUtils.mergeBufferGeometries(e);this.mesh=new THREE.Mesh(r),this.el.setObject3D("mesh",this.mesh)}})},function(e,r){THREE.BufferGeometryUtils={computeTangents:function(e){function r(e,r,t){d.fromArray(i,3*e),g.fromArray(i,3*r),v.fromArray(i,3*t),y.fromArray(u,2*e),E.fromArray(u,2*r),p.fromArray(u,2*t);var n=g.x-d.x,o=v.x-d.x,a=g.y-d.y,s=v.y-d.y,f=g.z-d.z,l=v.z-d.z,h=E.x-y.x,A=p.x-y.x,R=E.y-y.y,T=p.y-y.y,w=1/(h*T-A*R);b.set((T*n-R*o)*w,(T*a-R*s)*w,(T*f-R*l)*w),x.set((h*o-A*n)*w,(h*s-A*a)*w,(h*l-A*f)*w),m[e].add(b),m[r].add(b),m[t].add(b),c[e].add(x),c[r].add(x),c[t].add(x)}function t(e){O.fromArray(s,3*e),I.copy(O),z=m[e],M.copy(z),M.sub(O.multiplyScalar(O.dot(z))).normalize(),j.crossVectors(I,z),G=j.dot(c[e]),D=G<0?-1:1,l[4*e]=M.x,l[4*e+1]=M.y,l[4*e+2]=M.z,l[4*e+3]=D}var n=e.index,o=e.attributes;if(null===n||void 0===o.position||void 0===o.normal||void 0===o.uv)return void console.warn("THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()");var a=n.array,i=o.position.array,s=o.normal.array,u=o.uv.array,f=i.length/3;void 0===o.tangent&&e.addAttribute("tangent",new THREE.BufferAttribute(new Float32Array(4*f),4));for(var l=o.tangent.array,m=[],c=[],h=0;h<f;h++)m[h]=new THREE.Vector3,c[h]=new THREE.Vector3;var d=new THREE.Vector3,g=new THREE.Vector3,v=new THREE.Vector3,y=new THREE.Vector2,E=new THREE.Vector2,p=new THREE.Vector2,b=new THREE.Vector3,x=new THREE.Vector3,A=e.groups;0===A.length&&(A=[{start:0,count:a.length}]);for(var h=0,R=A.length;h<R;++h)for(var T=A[h],w=T.start,H=T.count,V=w,B=w+H;V<B;V+=3)r(a[V+0],a[V+1],a[V+2]);for(var D,z,G,M=new THREE.Vector3,j=new THREE.Vector3,O=new THREE.Vector3,I=new THREE.Vector3,h=0,R=A.length;h<R;++h)for(var T=A[h],w=T.start,H=T.count,V=w,B=w+H;V<B;V+=3)t(a[V+0]),t(a[V+1]),t(a[V+2])},mergeBufferGeometries:function(e,r){for(var t=null!==e[0].index,n=new Set(Object.keys(e[0].attributes)),o=new Set(Object.keys(e[0].morphAttributes)),a={},i={},s=new THREE.BufferGeometry,u=0,f=0;f<e.length;++f){var l=e[f];if(t!==(null!==l.index))return null;for(var m in l.attributes){if(!n.has(m))return null;void 0===a[m]&&(a[m]=[]),a[m].push(l.attributes[m])}for(var m in l.morphAttributes){if(!o.has(m))return null;void 0===i[m]&&(i[m]=[]),i[m].push(l.morphAttributes[m])}if(s.userData&&(s.userData.mergedUserData=s.userData.mergedUserData||[],s.userData.mergedUserData.push(l.userData)),r){var c;if(t)c=l.index.count;else{if(void 0===l.attributes.position)return null;c=l.attributes.position.count}s.addGroup(u,c,f),u+=c}}if(t){for(var h=0,d=[],f=0;f<e.length;++f){for(var g=e[f].index,v=0;v<g.count;++v)d.push(g.getX(v)+h);h+=e[f].attributes.position.count}s.setIndex(d)}for(var m in a){var y=this.mergeBufferAttributes(a[m]);if(!y)return null;s.addAttribute(m,y)}for(var m in i){var E=i[m][0].length;if(0===E)break;s.morphAttributes=s.morphAttributes||{},s.morphAttributes[m]=[];for(var f=0;f<E;++f){for(var p=[],v=0;v<i[m].length;++v)p.push(i[m][v][f]);var b=this.mergeBufferAttributes(p);if(!b)return null;s.morphAttributes[m].push(b)}}return s},mergeBufferAttributes:function(e){for(var r,t,n,o=0,a=0;a<e.length;++a){var i=e[a];if(i.isInterleavedBufferAttribute)return null;if(void 0===r&&(r=i.array.constructor),r!==i.array.constructor)return null;if(void 0===t&&(t=i.itemSize),t!==i.itemSize)return null;if(void 0===n&&(n=i.normalized),n!==i.normalized)return null;o+=i.array.length}for(var s=new r(o),u=0,a=0;a<e.length;++a)s.set(e[a].array,u),u+=e[a].array.length;return new THREE.BufferAttribute(s,t,n)}}}]);